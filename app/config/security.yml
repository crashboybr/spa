security:
    encoders:
        Spa\BackendBundle\Entity\User:
            algorithm:        sha1
            encode_as_base64: false
            iterations:       1

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]

    providers:
        administrators:
            entity: { class: SpaBackendBundle:User, property: username }

    firewalls:
        login_firewall:
            pattern:    ^/admin/login$
            anonymous:  ~

        secured_area:
            pattern:    ^/admin
            anonymous: ~
            form_login:
                login_path:  login
                check_path:  login_check
            logout:
                path:   /admin/logout
                target: /

    access_control:
    - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/admin, roles: ROLE_USER }
    - { path: ^/admin/usuarios, roles: ROLE_SUPER_ADMIN }

    #firewalls:
    #    dev:
    #        pattern:  ^/(_(profiler|wdt)|css|images|js)/
    #        security: false
    #
    #    login:
    #        pattern:  ^/admin/login$
    #        security: false

    #    secured_area:
    #        pattern:    ^/admin
    #        form_login:
    #            check_path: _security_check
    #            login_path: spa_backend_login
    #        http_basic:
    #            realm: "Secured Demo Area"
    #        logout:
    #            path:   _demo_logout
    #            target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    #access_control:
    #    - { path: ^/admin, roles: ROLE_ADMIN }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
